// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CommissionMe.Migrations
{
    [DbContext(typeof(CommissionMeDbContext))]
    partial class CommissionMeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CommissionMe.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PostImg")
                        .HasColumnType("text");

                    b.Property<bool>("Private")
                        .HasColumnType("boolean");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostImg = "https://media.wired.com/photos/5a13e367eceb990b7e519957/master/w_2560%2Cc_limit/Alice-X-Zhang.jpg",
                            Private = false,
                            ProfileId = 2,
                            Title = "Best Friends",
                            Uid = "V9gg3039YHROMJ6pH8tPD84Qrzh2"
                        },
                        new
                        {
                            Id = 2,
                            PostImg = "https://images.fineartamerica.com/images/artworkimages/mediumlarge/2/abed-the-astronaut-community-joseph-oland.jpg",
                            Private = false,
                            ProfileId = 1,
                            Title = "Up",
                            Uid = "WDnlUTXgAxfAgRjrNebr6dppvC83"
                        },
                        new
                        {
                            Id = 3,
                            PostImg = "https://obiruskenobi.files.wordpress.com/2013/11/greendale_final.jpg",
                            Private = false,
                            ProfileId = 2,
                            Title = "The Greendale Dead",
                            Uid = "KC1UeRhu8ATnVAodM8uMDIi9Brh2"
                        },
                        new
                        {
                            Id = 4,
                            PostImg = "https://images.theconversation.com/files/296052/original/file-20191008-128681-ngzwqb.jpg?ixlib=rb-1.1.0&rect=15%2C20%2C929%2C926&q=20&auto=format&w=320&fit=clip&dpr=2&usm=12&cs=strip",
                            Private = true,
                            ProfileId = 2,
                            Title = "Arts!",
                            Uid = "4Oqdg8mfh7TS8iz6zPCAu22GLGr1"
                        });
                });

            modelBuilder.Entity("CommissionMe.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Experience")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Rates")
                        .HasColumnType("text");

                    b.Property<string>("Style")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Troy... Troy Barnes?... Barnes comma Troy??",
                            Email = "tbone@greendale.edu",
                            Experience = "3-5 Years",
                            Image = "https://i.redd.it/3fbg5y6884351.jpg",
                            Name = "Troy Barnes",
                            Rates = "$200-300",
                            Style = "Landscapes",
                            Uid = "V9gg3039YHROMJ6pH8tPD84Qrzh2"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "It's called 'Showbusiness,' not 'Friendbusiness...'",
                            Email = "CoolAbedProductions@greendale.edu",
                            Experience = "6-9 Years",
                            Image = "https://spacecrip.files.wordpress.com/2012/04/abed.png?w=640",
                            Name = "Abed Nadir",
                            Rates = "300+",
                            Style = "Pop",
                            Uid = "WDnlUTXgAxfAgRjrNebr6dppvC83"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "That's nice!",
                            Email = "ShirleysSandwiches@greendale.edu",
                            Experience = "3-5 Years",
                            Image = "https://assets.mycast.io/characters/shirley-bennett-6527587-normal.jpg?1659645717",
                            Name = "Shirley Bennett",
                            Rates = "$200-300",
                            Style = "Commercial",
                            Uid = "KC1UeRhu8ATnVAodM8uMDIi9Brh2"
                        });
                });

            modelBuilder.Entity("PostProfile", b =>
                {
                    b.Property<int>("PostsId")
                        .HasColumnType("integer");

                    b.Property<int>("ProfilesId")
                        .HasColumnType("integer");

                    b.HasKey("PostsId", "ProfilesId");

                    b.HasIndex("ProfilesId");

                    b.ToTable("PostProfile");
                });

            modelBuilder.Entity("PostProfile", b =>
                {
                    b.HasOne("CommissionMe.Models.Post", null)
                        .WithMany()
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommissionMe.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("ProfilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
